from const import STYLE_COL
from setup import sl_sem, gr_sem
from semantics import MainLangSemantics, VarLangSemantics
from merger import merge


def test_gram():
    r1 = (
        [""] * 4
        + ["1/5a5", "не", "не бѣ ꙗвленъ•", "не", "не бꙑт\ue205 ꙗвл\ue201нъ"]
        + [""] * 2
        + ["ἠγνοεῖτο", "ἀγνοέω"]
        + [""] * 13
        + ["hl05:AAAAAAAA"]
    )
    r2 = (
        [""] * 4
        + ["1/5a5", "бѣ", "", "бꙑт\ue205", "", "gramm."]
        + [""] * 2
        + ["pass."]
        + [""] * 13
        + ["hl05:AAAAAAAA|hl09:AAAAAAAA"]
    )
    r3 = (
        [""] * 4
        + ["1/5a5", "ꙗвленъ•", "", "ꙗв\ue205т\ue205"]
        + [""] * 18
        + ["hl05:AAAAAAAA"]
    )

    rows = [r1, r2, r3]
    result = merge(rows, sl_sem, gr_sem)
    expected = [
        [""] * 4
        + [
            "01/005a05",
            "не бѣ ꙗвленъ•",
            "не бѣ ꙗвленъ•",
            "не",
            "не бꙑт\ue205 ꙗвл\ue201нъ",
        ]
        + [""] * 2
        + ["ἠγνοεῖτο", "ἀγνοέω"]
        + [""] * 13
        + ["hl05:AAAAAAAA"]
        + ["1"] * 4,
        [""] * 4
        + [
            "1/5a5",
            "не бѣ ꙗвленъ•",
            "",
            "бꙑт\ue205",
            "",
            "gramm.",
            "",
            "ἠγνοεῖτο",
            "pass.",
        ]
        + [""] * 13
        + ["hl05:AAAAAAAA|hl09:AAAAAAAA"]
        + ["1"] * 4,
        [""] * 4
        + [
            "01/005a05",
            "не бѣ ꙗвленъ•",
            "",
            "ꙗв\ue205т\ue205",
            "не бꙑт\ue205 ꙗвл\ue201нъ",
        ]
        + [""] * 2
        + ["ἠγνοεῖτο", "ἀγνοέω"]
        + [""] * 13
        + ["hl05:AAAAAAAA"]
        + ["1"] * 4,
    ]
    assert result == expected

    result = merge(rows, gr_sem, sl_sem)
    expected = [
        [""] * 4
        + [
            "01/005a05",
            "не бѣ ꙗвленъ•",
            "не бѣ ꙗвленъ•",
            "не & ꙗв\ue205т\ue205",
            "не бꙑт\ue205 ꙗвл\ue201нъ",
        ]
        + [""] * 2
        + ["ἠγνοεῖτο", "ἀγνοέω"]
        + [""] * 13
        + ["hl05:AAAAAAAA"]
        + ["1"] * 4,
        [""] * 4
        + [
            "1/5a5",
            "не бѣ ꙗвленъ•",
            "",
            "бꙑт\ue205",
            "",
            "gramm.",
            "",
            "ἠγνοεῖτο",
            "pass.",
        ]
        + [""] * 13
        + ["hl05:AAAAAAAA|hl09:AAAAAAAA"]
        + ["1"] * 4,
        [""] * 4
        + [
            "01/005a05",
            "не бѣ ꙗвленъ•",
            "",
            "не & ꙗв\ue205т\ue205",
            "не бꙑт\ue205 ꙗвл\ue201нъ",
        ]
        + [""] * 2
        + ["ἠγνοεῖτο"]
        + [""] * 14
        + ["hl05:AAAAAAAA"]
        + ["1"] * 4,
    ]
    assert result == expected


def test_special():
    row = (
        [""] * 4
        + ["1/4b16", "на\ue20dатъ", "семоу на\ue20dатъ", "на\ue20dѧт\ue205", "≠"]
        + [""] * 2
        + ["ᾐνίξατο", "αἰνίσσομαι"]
        + [""] * 14
    )
    res = merge([row.copy()], sl_sem, gr_sem)
    assert res == [
        [""] * 4
        + [
            "1/4b16",
            "на\ue20dатъ",
            "семоу на\ue20dатъ",
            "на\ue20dѧт\ue205",
            "≠ на\ue20dѧт\ue205",
        ]
        + [""] * 2
        + ["ᾐνίξατο", "αἰνίσσομαι"]
        + [""] * 14
        + ["1"] * 4
    ]
    res = merge([row.copy()], gr_sem, sl_sem)
    assert res == [
        [""] * 4
        + [
            "1/4b16",
            "на\ue20dатъ",
            "семоу на\ue20dатъ",
            "на\ue20dѧт\ue205",
            "≠ на\ue20dѧт\ue205",
        ]
        + [""] * 2
        + ["ᾐνίξατο", "αἰνίσσομαι"]
        + [""] * 14
        + ["1"] * 4
    ]


def test_na():
    rows = [
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "оба",
            "",
            "оба на десѧте",
            "",
        ]
        + ["ιβʹ"] * 2
        + [""] * 3
        + ["δώδεκα MPaPh", "δώδεκα"]
        + [""] * 8
        + ["hl05:AAAAAAAA|bold|italic"],
        [""] * 4
        + ["02/W169b26", "на", "ма же \ue201д\ue205нь ѿ ѡбою на де-", "на", "на + Loc."]
        + [""] * 17
        + ["hl05:AAAAAAAA|hl08:AAAAAAAA|bold|italic"],
        [""] * 4
        + ["02/W169b26", "десете•", "ма же \ue201д\ue205нь ѿ ѡбою на де-", "десѧть"]
        + [""] * 18
        + ["hl05:AAAAAAAA|bold|italic"],
    ]

    res = merge([rows[0].copy(), rows[1].copy(), rows[2].copy()], sl_sem, gr_sem)
    assert res == [
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "оба",
            "",
            "оба на десѧте",
            "",
        ]
        + ["ιβʹ"] * 2
        + [""] * 3
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "на",
            "на + Loc.",
            "оба на десѧте",
            "",
        ]
        + ["ιβʹ"] * 2
        + [""] * 3
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|hl08:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "десѧть",
            "",
            "оба на десѧте",
            "",
        ]
        + ["ιβʹ"] * 2
        + [""] * 3
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
    ]

    res = merge([rows[0].copy(), rows[1].copy(), rows[2].copy()], gr_sem, sl_sem)
    assert res == [
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "оба & на & десѧть",
            "",
            "оба на десѧте",
            "",
        ]
        + ["ιβʹ"] * 2
        + [""] * 3
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "оба & на & десѧть",
            "на + Loc.",
            "оба на десѧте",
            "",
            "ιβʹ",
        ]
        + [""] * 4
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|hl08:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
        [""] * 4
        + [
            "02/W169b26",
            "ѡбою на десете•",
            "ма же \ue201д\ue205нь ѿ ѡбою на де-",
            "оба & на & десѧть",
            "",
            "оба на десѧте",
            "",
            "ιβʹ",
        ]
        + [""] * 4
        + ["δώδεκα MPhPa"] * 2
        + [""] * 8
        + ["hl05:AAAAAAAA|bold|italic"]
        + ["1"] * 4,
    ]


def test_same():
    rows = [
        [""] * 4
        + ["19/97d20", "нѣсть", "", "не"]
        + [""] * 3
        + ["οὐκ", "οὐ"]
        + [""] * 14,
        [""] * 5 + ["=", "", "бꙑт"] + [""] * 3 + ["εἰμί", "εἰμί"] + [""] * 14,
    ]

    res = merge([rows[0].copy(), rows[1].copy()], gr_sem, sl_sem)

    assert res == [
        [""] * 4
        + ["19/97d20", "нѣсть", "", "не"]
        + [""] * 3
        + ["οὐκ", "οὐ"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["19/97d20", "нѣсть", "", "бꙑт"]
        + [""] * 3
        + ["εἰμί", "εἰμί"]
        + [""] * 14
        + ["1"] * 4,
    ]

    res = merge([rows[0].copy(), rows[1].copy()], sl_sem, gr_sem)

    assert res == [
        [""] * 4
        + ["19/97d20", "нѣсть", "", "не"]
        + [""] * 3
        + ["οὐκ", "οὐ"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["19/97d20", "нѣсть", "", "бꙑт"]
        + [""] * 3
        + ["εἰμί", "εἰμί"]
        + [""] * 14
        + ["1"] * 4,
    ]


def test_hodom_spiti():
    rows = [
        [
            "хⷪ҇домь WG ход\ue205т\ue205 H",
            "ходъ WG",
            "ходомь спѣт\ue205 WG",
            "",
            "14/72d18",
            "ход\ue205мъ",
            "себе• по поут\ue205 хо-",
            "ход\ue205т\ue205",
            "≈ ход\ue205т\ue205 спѣѭще",
            "",
            "",
            "προβαίνοντες",
            "προβαίνω",
        ]
        + [""] * 13
        + ["hl05|hl00"],
        ["спѣюще WG с пѣн\ue205\ue201мь H"]
        + [""] * 3
        + ["14/72d19", "спѣюще•", "д\ue205мъ спѣюще•", "спѣт\ue205"]
        + [""] * 18
        + ["hl05|hl00"],
    ]
    res = merge([rows[0].copy(), rows[1].copy()], gr_sem, sl_sem)
    # TODO
    # assert res == [
    #     [
    #         "хⷪ҇домь WG ход\ue205т\ue205 H",
    #         "ходъ WG",
    #         "ходомь спѣт\ue205 WG",
    #         "",
    #         "14/72d18",
    #         "ход\ue205мъ",
    #         "себе• по поут\ue205 хо-",
    #         "ход\ue205т\ue205",
    #         "≈ ход\ue205т\ue205 спѣѭще",
    #         "",
    #         "",
    #         "προβαίνοντες",
    #         "προβαίνω",
    #     ]
    #     + [""] * 13
    #     + ["hl05|hl00"]
    #     + ["1"] * 4,
    #     ["спѣюще WG с пѣн\ue205\ue201мь H"]
    #     + [""] * 3
    #     + ["14/72d19", "спѣюще•", "д\ue205мъ спѣюще•", "спѣт\ue205"]
    #     + [""] * 18
    #     + ["hl05|hl00"]
    #     + ["1"] * 4,
    # ]


def test_puteshestvie():
    rows = [
        [
            "шьст\ue205ꙗ G шьств\ue205ꙗ H",
            "шьст\ue205\ue201 G / шьств\ue205\ue201 H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/28d18",
            "поутошьств\ue205ꙗ",
            "поутошьств\ue205-",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"],
        ["пꙋт\ue205 GH", "пѫть GH"] + [""] * 24 + ["hl00:AAAAAAAA"],
    ]
    res = merge([rows[0].copy(), rows[1].copy()], sl_sem, gr_sem)
    assert res == [
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "шьст\ue205\ue201 пѫть G / шьств\ue205\ue201 пѫть H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
            "поутошьств\ue205-",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "шьст\ue205\ue201 пѫть G / шьств\ue205\ue201 пѫть H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
        ]
        + [""] * 5
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
    ]

    res = merge([rows[0].copy(), rows[1].copy()], sl_sem.var, gr_sem)
    assert res == [
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "шьст\ue205\ue201 G / шьств\ue205\ue201 H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
            "поутошьств\ue205-",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "пѫть GH",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
            "",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
    ]

    res = merge([rows[0].copy(), rows[1].copy()], gr_sem, sl_sem)
    assert res == [
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "шьст\ue205\ue201 & пѫть G / шьств\ue205\ue201 & пѫть H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
            "поутошьств\ue205-",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας", "ὁδοιπορία"]
        + [""] * 13
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
        [
            "шьст\ue205ꙗ пꙋт\ue205 G шьств\ue205ꙗ пꙋт\ue205 H",
            "шьст\ue205\ue201 & пѫть G / шьств\ue205\ue201 & пѫть H",
            "шьст\ue205\ue201 пѫт\ue205 G / шьств\ue205\ue201 пѫт\ue205 H",
            "",
            "05/028d18",
            "поутошьств\ue205ꙗ",
            "",
            "пѫтошьств\ue205\ue201",
        ]
        + [""] * 3
        + ["ὁδοιπορίας"]
        + [""] * 14
        + ["hl00:AAAAAAAA"]
        + ["1"] * 4,
    ]

from const import STYLE_COL
from setup import sl_sem, gr_sem
from semantics import MainLangSemantics, VarLangSemantics
from merger import merge


def test_repeated_om():
    rows = [
        ["om. WH", "om."]
        + [""] * 2
        + ["1/7c6", "аще", "аще \ue205 не", "аще"]
        + [""] * 3
        + ["om."] * 2
        + [""] * 14,
        [""] * 4
        + ["1/7c6", "не", "аще \ue205 не", "не"]
        + [""] * 3
        + ["οὐ"] * 2
        + [""] * 14,
        ["om. WH", "om."]
        + [""] * 2
        + ["1/7c6", "\ue205", "аще \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["om."] * 2
        + [""] * 14,
    ]
    res = merge(rows, sl_sem, gr_sem)
    assert res == [
        ["om. WH", "om."]
        + [""] * 2
        + ["1/7c6", "аще", "аще \ue205 не", "аще"]
        + [""] * 3
        + ["om."] * 2
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/7c6", "не", "аще \ue205 не", "не"]
        + [""] * 3
        + ["οὐ", "οὐ"]
        + [""] * 14
        + ["1"] * 4,
        ["om. WH", "om."]
        + [""] * 2
        + ["1/7c6", "\ue205", "аще \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["om."] * 2
        + [""] * 14
        + ["1"] * 4,
    ]

    res = merge(rows, sl_sem.var, gr_sem)
    assert res == [
        ["om. WH", "om."]
        + [""] * 2
        + [
            "1/7c6",
            "аще",
            "аще \ue205 не",
            "аще",
        ]
        + [""] * 3
        + ["om."] * 2
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/7c6", "не", "аще \ue205 не", "не"]
        + [""] * 3
        + ["οὐ"] * 2
        + [""] * 14
        + ["1"] * 4,
        ["om. WH", "om."]
        + [""] * 2
        + ["1/7c6", "\ue205", "аще \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["om.", "om."]
        + [""] * 14
        + ["1"] * 4,
    ]


def test_repeated_kai():
    rows = [
        [""] * 4
        + ["1/5d9", "него•", "се \ue205 ѿ него• \ue205 не", "\ue205 pron."]
        + [""] * 3
        + ["αὐτοῦ", "αὐτός"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9", "се", "се \ue205 ѿ него• \ue205 не", "се"]
        + [""] * 3
        + ["ἰδοὺ", "ἰδού"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9(1)", "\ue205", "се \ue205 ѿ него• \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["καὶ", "καί"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9", "ѿ", "се \ue205 ѿ него• \ue205 не", "отъ"]
        + [""] * 3
        + ["ἐξ", "ἐκ"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9", "него•", "се \ue205 ѿ него• \ue205 не", "\ue205 pron."]
        + [""] * 3
        + ["αὐτοῦ", "αὐτός"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9(2)", "\ue205", "се \ue205 ѿ него• \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["καὶ", "καί"]
        + [""] * 14,
        [""] * 4
        + ["1/5d9", "не", "се \ue205 ѿ него• \ue205 не", "не"]
        + [""] * 3
        + ["οὐχ", "οὐ"]
        + [""] * 14,
    ]
    res = merge([list(r) for r in rows], sl_sem, gr_sem)
    assert res == [
        [""] * 4
        + ["1/5d9", "него•", "се \ue205 ѿ него• \ue205 не", "\ue205 pron."]
        + [""] * 3
        + ["αὐτοῦ", "αὐτός"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9", "се", "се \ue205 ѿ него• \ue205 не", "се"]
        + [""] * 3
        + ["ἰδοὺ", "ἰδού"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9(1)", "\ue205", "се \ue205 ѿ него• \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["καὶ", "καί"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9", "ѿ", "се \ue205 ѿ него• \ue205 не", "отъ"]
        + [""] * 3
        + ["ἐξ", "ἐκ"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9", "него•", "се \ue205 ѿ него• \ue205 не", "\ue205 pron."]
        + [""] * 3
        + ["αὐτοῦ", "αὐτός"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9(2)", "\ue205", "се \ue205 ѿ него• \ue205 не", "\ue205 conj."]
        + [""] * 3
        + ["καὶ", "καί"]
        + [""] * 14
        + ["1"] * 4,
        [""] * 4
        + ["1/5d9", "не", "се \ue205 ѿ него• \ue205 не", "не"]
        + [""] * 3
        + ["οὐχ", "οὐ"]
        + [""] * 14
        + ["1"] * 4,
    ]


def test_repeated_velichanie():
    rows = [
        ["вел\ue205\ue20dан\ue205е WGH", "вел\ue205\ue20dан\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14,
        ["невел\ue205\ue20d\ue205\ue201 WGH", "невел\ue205\ue20d\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14,
    ]

    r2 = [list(rows[0]), list(rows[1])]
    res = merge(r2, sl_sem, gr_sem)
    assert r2 == rows
    assert sl_sem.cnt_col == STYLE_COL + 1
    assert sl_sem.other().cnt_col == STYLE_COL + 2
    assert gr_sem.cnt_col == STYLE_COL + 3
    assert res == [
        ["вел\ue205\ue20dан\ue205е WGH", "вел\ue205\ue20dан\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["1"] * 4,
        ["невел\ue205\ue20d\ue205\ue201 WGH", "невел\ue205\ue20d\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["2", "1"] * 2,
    ]

    res = merge(rows, gr_sem, sl_sem.var)
    assert sl_sem.cnt_col == STYLE_COL + 1
    assert sl_sem.other().cnt_col == STYLE_COL + 2
    assert gr_sem.cnt_col == STYLE_COL + 3
    assert res == [
        ["вел\ue205\ue20dан\ue205е WGH", "вел\ue205\ue20dан\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["1"] * 4,
        ["невел\ue205\ue20d\ue205\ue201 WGH", "невел\ue205\ue20d\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["2", "1"] * 2,
    ]

    res = merge([list(rows[0]), list(rows[1])], sl_sem.var, gr_sem)
    assert sl_sem.cnt_col == STYLE_COL + 1
    assert sl_sem.other().cnt_col == STYLE_COL + 2
    assert gr_sem.cnt_col == STYLE_COL + 3
    assert res == [
        ["вел\ue205\ue20dан\ue205е WGH", "вел\ue205\ue20dан\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["1"] * 4,
        ["невел\ue205\ue20d\ue205\ue201 WGH", "невел\ue205\ue20d\ue205\ue201"]
        + [""] * 2
        + [
            "05/21a19",
            "невел\ue205\ue20dан\ue205\ue201",
            "тъкмо• нъ \ue205 не-",
            "невел\ue205\ue20dан\ue205\ue201",
        ]
        + [""] * 3
        + ["ἄτυφον", "ἄτυφος"]
        + [""] * 14
        + ["2", "1"] * 2,
    ]
